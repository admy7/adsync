openapi: 3.1.0
info:
  title: AdSync API
  description: API for managing marketing campaigns.
  version: 0.0.1
paths:
  /api/v1/campaigns:
    post:
      summary: Create a new campaign
      operationId: createCampaign
      security:
        - BearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCampaignDTO'
      responses:
        '201':
          description: Campaign created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      summary: Retrieve all campaigns
      operationId: getAllCampaigns
      security:
        - BearerAuth: [ ]
      responses:
        '200':
          description: List of all campaigns
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllCampaignsDTO'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/campaigns/{id}:
    get:
      summary: Retrieve a campaign by ID
      operationId: getCampaign
      security:
        - BearerAuth: [ ]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Campaign details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignViewModel'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Campaign not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      summary: Update a campaign by ID
      operationId: updateCampaign
      security:
        - BearerAuth: [ ]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCampaignDTO'
      responses:
        '204':
          description: Campaign updated
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Campaign not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Delete a campaign by ID
      operationId: deleteCampaign
      security:
        - BearerAuth: [ ]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Campaign deleted
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Campaign not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/auth/register:
    post:
      summary: Register a new user
      operationId: registerUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserDTO'
      responses:
        '201':
          description: User registered
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/auth/login:
    post:
      summary: Login and receive a JWT
      operationId: loginUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogInDTO'
      responses:
        '200':
          description: JWT issued
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Channel:
      type: string
    #      enum:
    #        - Radio
    #        - TV
    #        - Social media
    #        - Search engine
    CreateCampaignDTO:
      type: object
      properties:
        name:
          type: string
        channel:
          $ref: '#/components/schemas/Channel'
        budget:
          type: number
        start:
          type: string
          format: date
        end:
          type: string
          format: date
      required:
        - name
        - channel
        - budget
        - start
        - end
    UpdateCampaignDTO:
      type: object
      properties:
        name:
          type: string
        channel:
          $ref: '#/components/schemas/Channel'
        budget:
          type: number
        start:
          type: string
          format: date
        end:
          type: string
          format: date
    IdResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
    GetAllCampaignsDTO:
      type: object
      properties:
        count: number
        campaigns:
          type: array
          items:
            $ref: '#/components/schemas/CampaignViewModel'
    CampaignViewModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        channel:
          $ref: '#/components/schemas/Channel'
        budget:
          type: number
        start:
          type: string
          format: date
        end:
          type: string
          format: date
      required:
        - id
        - name
        - channel
        - budget
        - start
        - end
    CreateUserDTO:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password
    LogInDTO:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password
    TokenResponse:
      type: object
      properties:
        token:
          type: string
      required:
        - token
    ErrorResponse:
      type: object
      properties:
        status:
          type: number
        message:
          type: string
      required:
        - status
        - message
